name: Build and Release Dev

on:
  push:
    branches:
      - dev

  workflow_dispatch:
    inputs:
      trigger-build:
        description: 'Trigger a build manually'
        required: false
        default: 'false'

jobs:
  check-commit:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Check commit message
        id: check-commit-message
        run: |
          commit_message=$(git log --format=%B -n 1 ${{ github.sha }})
          if [[ $commit_message == *"build"* ]]; then
            echo "Commit message contains 'build'"
            echo "::set-output name=contains_build::true"
          else
            echo "Commit message does not contain 'build'"
            echo "::set-output name=contains_build::false"
          fi

  build:
    needs: check-commit
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get repository information
        uses: actions/github-script@v4
        with:
          script: |
            const repo = context.payload.repository.full_name;
            console.log(`The repository is ${repo}`);

      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y make tar

      - name: Download and extract CEdev
        run: |
          curl -sL https://github.com/CE-Programming/toolchain/releases/download/nightly/CEdev-Linux-nightly.tar.gz | tar xz

      - name: Add CEdev to PATH
        run: |
          echo "CEdev/bin" >> $GITHUB_PATH
          echo $GITHUB_PATH

      - name: Make GFX
        run: make gfx
        if: needs.check-commit.outputs.contains_build == 'true'

      - name: Build TINET.8xp
        run: make
        if: needs.check-commit.outputs.contains_build == 'true'

      - name: Upload TINET.8xp
        uses: actions/upload-artifact@v2
        with:
          name: TINET.8xp
          path: bin/TINET.8xp

      - name: Set final commit status
        uses: myrotvorets/set-commit-status-action@master
        if: always()
        with:
          sha: ${{ github.sha }}
          token: ${{ secrets.GITHUB_TOKEN }}
          status: ${{ job.status }}

      - name: Create Development Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: DEV-${{ github.run_number }}
          release_name: DEV-${{ github.run_number }}
          draft: false
          prerelease: true

      - name: Add TINET.8xp to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: bin/TINET.8xp
          asset_name: TINET.8xp
          asset_content_type: application/octet-stream
